Massachusetts Institute of Technology
Charles Truscott Watters

declarative versus imperative forms of knowledge

declarative: refering to statements of fact
imperative: refering to procedural methods of solving based on statements of fact

int, float, string, set, tuple, list, dictionary, boolean, class, object, method, function, function invocation, combination of types, expression

+ - * / // % ** ( ) != ==

and, or, not

> >= < <=

& | ^ ~ << >>

. * **

[ ] [start:stop + 1] [start:stop + 1:step] [i][j][k]x 

: , =

Addition, Subtraction, Multiplication, True Division, Floor Division, Remainder or Modulus, Exponentiation, Parentheses

Inequality, Equality

Logical AND, Logical OR, Logical NOT

Greater-than, Greater-than or equal-to, Less-than, Less-than or equal-to

Bitwise AND, OR, XOR, NOT

Left Shift, Right Shift

Dot, Unpacking, Packing

Subscript, Subscript with splice, Subscript with double splice, Arbitrary length subscript

Addition: Adds the first operand to the second operand and returns the result
Subtraction: Subtracts the second operand from the first operand and returns the result (e.g. int or floating point)
Multiplication: Multiplies the first operand by the second operand and returns the result
True Division: Divides the first operand by the second operand (returns how many times the second operand needs to be multiplied to reach the first operand), with floating-point precision
Floor Division: Divides the first operand by the second operand (returns how many times the second operand needs to be multiplied to reach the first operand), with integer precision
Remainder or Modulus: Returns the remainder when the first operand is taken modulo the second operand, e.g. returns the remainder after the first operand is divided by the second operand
IPython 8.2.0 -- An enhanced Interactive Python.

10 % 5
Out[1]: 0

5 % 10
Out[2]: 5

99 % 200
Out[3]: 99

200 % 99
Out[4]: 2

99 * 2
Out[5]: 198


Exponentiation: Returns the first operand taken to the exponent as the second operand

Parentheses: Used to group in prioritisation any group of expressions, e.g. used for order of precedence in all expressions and also arithmetical expressions (e.g. relational, logical, word-operators, function arguments)

Inequality: Returns True or False, True if the operands on the LHS and RHS are not equal and False if the operands on the LHS and RHS are equal

Equality: Returns True or False, True if the operands on the LHS and RHS are equal and False if the operands on the LHS and RHS are not equal

Logical AND: Returns True if the Boolean objects on the LHS and RHS are both True (e.g. True if (True and True) and False if any other, (e.g. True and False, False and True or False and False))

Logical OR: Returns True if at least one Boolean object on the LHS and RHS are True (e.g. True if (True and True), (True and False), (False and True)), False only if (False and False)

Logical NOT: Negates the Truth value of a unary Boolean operand, e.g. not (True) == False (True), not (False) == (True) (True)

Greater-than:

Greater-than or equal-to:

Less-than:

Less-than or equal-to:

